{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sudheer\\\\Documents\\\\GitHub\\\\BookMovieApp\\\\src\\\\common\\\\header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from \"../../assets/logo.svg\";\nimport \"./Header.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"react-modal\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n\nfunction TabPanel(props) {\n  const {\n    index,\n    value,\n    children\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: value !== index,\n      children: value === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nexport default function Header(props) {\n  _s();\n\n  const [session, setSession] = useState(window.sessionStorage.getItem(\"access-token\"));\n  const [showModal, setShowModal] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [value, setValue] = useState(0);\n  const [registerUserForm, setRegisterUserForm] = useState({\n    email_address: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    password: \"\"\n  });\n  const [reqemail, setReqEmail] = useState(\"dispNone\");\n  const [reqfirstname, setReqFirstName] = useState(\"dispNone\");\n  const [reqlastname, setReqLastName] = useState(\"dispNone\");\n  const [reqmobile, setReqMobile] = useState(\"dispNone\");\n  const [reqpass, setReqPass] = useState(\"dispNone\");\n  const [username, setUsername] = useState(\"\");\n  const [requsername, setReqUserName] = useState(\"dispNone\");\n  const [password, setPassword] = useState(\"\");\n  const [reqpassword, setReqPassword] = useState(\"dispNone\");\n  const [showdisplay, setShowDisplay] = useState(\"dispNone\");\n\n  const inputChangedHandler = event => {\n    const state = registerUserForm;\n    state[event.target.name] = event.target.value;\n    setRegisterUserForm({ ...state\n    });\n  };\n\n  const inputUserNameHandler = event => {\n    setUsername(event.target.value);\n  };\n\n  const inputPasswordHandler = event => {\n    setPassword(event.target.value);\n  };\n\n  const validateLoginForm = () => {\n    username === \"\" ? setReqUserName(\"dispBlock\") : setReqUserName(\"dispNone\");\n    password === \"\" ? setReqPassword(\"dispBlock\") : setReqPassword(\"dispNone\");\n\n    if (username === \"\" || password === \"\") {\n      return;\n    } else {\n      return true;\n    }\n  };\n\n  const validateRegisterForm = () => {\n    registerUserForm.email_address === \"\" ? setReqEmail(\"dispBlock\") : setReqEmail(\"dispNone\");\n    registerUserForm.first_name === \"\" ? setReqFirstName(\"dispBlock\") : setReqFirstName(\"dispNone\");\n    registerUserForm.last_name === \"\" ? setReqLastName(\"dispBlock\") : setReqLastName(\"dispNone\");\n    registerUserForm.mobile_number === \"\" ? setReqMobile(\"dispBlock\") : setReqMobile(\"dispNone\");\n    registerUserForm.password === \"\" ? setReqPass(\"dispBlock\") : setReqPass(\"dispNone\");\n\n    if (registerUserForm.email_address === \"\" || registerUserForm.first_name === \"\" || registerUserForm.last_name === \"\" || registerUserForm.mobile_number === \"\" || registerUserForm.password === \"\") {\n      return;\n    } else {\n      return true;\n    }\n  };\n\n  let bookshowBtn;\n\n  const onLoginFormSubmitted = () => {\n    if (validateLoginForm()) {\n      fetch(props.baseUrl + \"auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: \"Basic \" + window.btoa(username + \":\" + password)\n        }\n      }).then(response => {\n        if (response.status === 200) {\n          window.sessionStorage.setItem(\"access-token\", response.headers.get(\"access-token\"));\n          setSession(window.sessionStorage.getItem(\"access-token\"));\n          closeModal();\n        }\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n  };\n\n  const onFormSubmitted = async event => {\n    if (validateRegisterForm()) {\n      const rawResponse = await fetch(props.baseUrl + \"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(registerUserForm)\n      });\n      const data = await rawResponse.json();\n\n      if (data.status === \"ACTIVE\") {\n        setShowDisplay(\"dispBlock\");\n      }\n    }\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  Modal.setAppElement(\"#root\");\n\n  const openModal = () => {\n    setShowModal(true);\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const logoutHandler = async () => {\n    const rawResponse = await fetch(props.baseUrl + \"/auth/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Basic \" + window.btoa(username + \":\" + password)\n      }\n    });\n    window.sessionStorage.removeItem(\"access-token\");\n    setSession(window.sessionStorage.getItem(\"access-token\"));\n    const data = await rawResponse.json();\n    console.log(data);\n  };\n\n  const bookShowHandler = () => {\n    if (session) {\n      window.location.href = `/bookshow/${props.movieid}`;\n    } else {\n      openModal();\n    }\n  };\n\n  if (props.detailButton) {\n    bookshowBtn = /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: bookShowHandler,\n      children: \"Book Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"\",\n      className: \"rotate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      children: [bookshowBtn, session ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: logoutHandler,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        onClick: openModal,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), showModal ? /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        indicatorColor: \"secondary\",\n        onChange: handleChange,\n        \"aria-label\": \"disabled tabs example\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px\",\n            padding: \"0 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"username\",\n              name: \"username\",\n              type: \"text\",\n              onChange: inputUserNameHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: requsername,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              type: \"password\",\n              name: \"password\",\n              onChange: inputPasswordHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqpassword,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onLoginFormSubmitted,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"20px\",\n            padding: \"0 20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"first_name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"first_name\",\n              name: \"first_name\",\n              type: \"text\",\n              onChange: inputChangedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: reqfirstname,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"red\",\n              children: \"Required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"last_name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              refs: \"last_name\",\n              id: \"last_name\",\n              name: \"last_name\",\n              type: \"text\",\n              onChange: inputChangedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqlastname,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              refs: \"email\",\n              id: \"email\",\n              name: \"email_address\",\n              type: \"text\",\n              onChange: inputChangedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqemail,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              refs: \"password\",\n              id: \"password\",\n              name: \"password\",\n              type: \"text\",\n              onChange: inputChangedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqpass,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            className: \"formControl\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"contact\",\n              children: \"Contact No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              refs: \"mobile_number\",\n              id: \"mobile_number\",\n              name: \"mobile_number\",\n              type: \"number\",\n              onChange: inputChangedHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              className: reqmobile,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red\",\n                children: \"Required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            className: showdisplay,\n            style: {\n              fontSize: \"14px\",\n              color: \"black\"\n            },\n            children: \"Registration Successful. Please Login!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onFormSubmitted,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"rv60h/GPMSG6hNLD+QOQyYGWiN8=\");\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["C:/Users/Sudheer/Documents/GitHub/BookMovieApp/src/common/header/Header.js"],"names":["React","useState","Button","Modal","Tabs","Tab","FormControl","Input","FormHelperText","InputLabel","customStyles","content","top","left","right","bottom","marginRight","transform","TabPanel","props","index","value","children","Header","session","setSession","window","sessionStorage","getItem","showModal","setShowModal","modalIsOpen","setIsOpen","setValue","registerUserForm","setRegisterUserForm","email_address","first_name","last_name","mobile_number","password","reqemail","setReqEmail","reqfirstname","setReqFirstName","reqlastname","setReqLastName","reqmobile","setReqMobile","reqpass","setReqPass","username","setUsername","requsername","setReqUserName","setPassword","reqpassword","setReqPassword","showdisplay","setShowDisplay","inputChangedHandler","event","state","target","name","inputUserNameHandler","inputPasswordHandler","validateLoginForm","validateRegisterForm","bookshowBtn","onLoginFormSubmitted","fetch","baseUrl","method","headers","authorization","btoa","then","response","status","setItem","get","closeModal","catch","err","console","log","message","onFormSubmitted","rawResponse","body","JSON","stringify","data","json","handleChange","newValue","setAppElement","openModal","logoutHandler","removeItem","bookShowHandler","location","href","movieid","detailButton","logo","float","marginLeft","margin","padding","textAlign","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport \"./Header.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Modal from \"react-modal\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nfunction TabPanel(props) {\r\n  const { index, value, children } = props;\r\n  return (\r\n    <div>\r\n      <div hidden={value !== index}>\r\n        {value === index && <div>{children}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Header(props) {\r\n  const [session, setSession] = useState(\r\n    window.sessionStorage.getItem(\"access-token\")\r\n  );\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n  const [registerUserForm, setRegisterUserForm] = useState({\r\n    email_address: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    mobile_number: \"\",\r\n    password: \"\",\r\n  });\r\n  const [reqemail, setReqEmail] = useState(\"dispNone\");\r\n  const [reqfirstname, setReqFirstName] = useState(\"dispNone\");\r\n  const [reqlastname, setReqLastName] = useState(\"dispNone\");\r\n  const [reqmobile, setReqMobile] = useState(\"dispNone\");\r\n  const [reqpass, setReqPass] = useState(\"dispNone\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [requsername, setReqUserName] = useState(\"dispNone\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [reqpassword, setReqPassword] = useState(\"dispNone\");\r\n  const [showdisplay, setShowDisplay] = useState(\"dispNone\");\r\n\r\n  const inputChangedHandler = (event) => {\r\n    const state = registerUserForm;\r\n    state[event.target.name] = event.target.value;\r\n\r\n    setRegisterUserForm({ ...state });\r\n  };\r\n\r\n  const inputUserNameHandler = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const inputPasswordHandler = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const validateLoginForm = () => {\r\n    username === \"\" ? setReqUserName(\"dispBlock\") : setReqUserName(\"dispNone\");\r\n    password === \"\" ? setReqPassword(\"dispBlock\") : setReqPassword(\"dispNone\");\r\n    if (username === \"\" || password === \"\") {\r\n      return;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateRegisterForm = () => {\r\n    registerUserForm.email_address === \"\"\r\n      ? setReqEmail(\"dispBlock\")\r\n      : setReqEmail(\"dispNone\");\r\n    registerUserForm.first_name === \"\"\r\n      ? setReqFirstName(\"dispBlock\")\r\n      : setReqFirstName(\"dispNone\");\r\n    registerUserForm.last_name === \"\"\r\n      ? setReqLastName(\"dispBlock\")\r\n      : setReqLastName(\"dispNone\");\r\n    registerUserForm.mobile_number === \"\"\r\n      ? setReqMobile(\"dispBlock\")\r\n      : setReqMobile(\"dispNone\");\r\n    registerUserForm.password === \"\"\r\n      ? setReqPass(\"dispBlock\")\r\n      : setReqPass(\"dispNone\");\r\n\r\n    if (\r\n      registerUserForm.email_address === \"\" ||\r\n      registerUserForm.first_name === \"\" ||\r\n      registerUserForm.last_name === \"\" ||\r\n      registerUserForm.mobile_number === \"\" ||\r\n      registerUserForm.password === \"\"\r\n    ) {\r\n      return;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  let bookshowBtn;\r\n\r\n  const onLoginFormSubmitted = () => {\r\n    if (validateLoginForm()) {\r\n      fetch(props.baseUrl + \"auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: \"Basic \" + window.btoa(username + \":\" + password),\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            window.sessionStorage.setItem(\r\n              \"access-token\",\r\n              response.headers.get(\"access-token\")\r\n            );\r\n            setSession(window.sessionStorage.getItem(\"access-token\"));\r\n            closeModal();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onFormSubmitted = async (event) => {\r\n    if (validateRegisterForm()) {\r\n      const rawResponse = await fetch(props.baseUrl + \"/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(registerUserForm),\r\n      });\r\n      const data = await rawResponse.json();\r\n      if (data.status === \"ACTIVE\") {\r\n        setShowDisplay(\"dispBlock\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  Modal.setAppElement(\"#root\");\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n    setIsOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const logoutHandler = async () => {\r\n    const rawResponse = await fetch(props.baseUrl + \"/auth/logout\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: \"Basic \" + window.btoa(username + \":\" + password),\r\n      },\r\n    });\r\n    window.sessionStorage.removeItem(\"access-token\");\r\n    setSession(window.sessionStorage.getItem(\"access-token\"));\r\n    const data = await rawResponse.json();\r\n    console.log(data);\r\n  };\r\n\r\n  const bookShowHandler = () => {\r\n    if (session) {\r\n      window.location.href = `/bookshow/${props.movieid}`;\r\n    } else {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  if (props.detailButton) {\r\n    bookshowBtn = (\r\n      <Button variant=\"contained\" color=\"primary\" onClick={bookShowHandler}>\r\n        Book Show\r\n      </Button>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={logo} alt=\"\" className=\"rotate\" />\r\n      <span style={{ float: \"right\" }}>\r\n        {bookshowBtn}\r\n        {session ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={logoutHandler}\r\n          >\r\n            Logout\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            style={{ marginLeft: \"10px\" }}\r\n            onClick={openModal}\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </span>\r\n      {showModal ? (\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            indicatorColor=\"secondary\"\r\n            onChange={handleChange}\r\n            aria-label=\"disabled tabs example\"\r\n          >\r\n            <Tab label=\"Login\" />\r\n            <Tab label=\"Register\" />\r\n          </Tabs>\r\n          <TabPanel value={value} index={0}>\r\n            <div style={{ margin: \"20px\", padding: \"0 20px\" }}>\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                <Input\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  onChange={inputUserNameHandler}\r\n                />\r\n                <FormHelperText className={requsername}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                <Input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={inputPasswordHandler}\r\n                />\r\n                <FormHelperText className={reqpassword}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onLoginFormSubmitted}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <div style={{ margin: \"20px\", padding: \"0 20px\" }}>\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"first_name\">First Name</InputLabel>\r\n                <Input\r\n                  id=\"first_name\"\r\n                  name=\"first_name\"\r\n                  type=\"text\"\r\n                  onChange={inputChangedHandler}\r\n                />\r\n              </FormControl>\r\n              <FormHelperText className={reqfirstname}>\r\n                <span className=\"red\">Required</span>\r\n              </FormHelperText>\r\n              <br />\r\n              <br />\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"last_name\">Last Name</InputLabel>\r\n                <Input\r\n                  refs=\"last_name\"\r\n                  id=\"last_name\"\r\n                  name=\"last_name\"\r\n                  type=\"text\"\r\n                  onChange={inputChangedHandler}\r\n                />\r\n                <FormHelperText className={reqlastname}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                <Input\r\n                  refs=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email_address\"\r\n                  type=\"text\"\r\n                  onChange={inputChangedHandler}\r\n                />\r\n                <FormHelperText className={reqemail}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                <Input\r\n                  refs=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"text\"\r\n                  onChange={inputChangedHandler}\r\n                />\r\n                <FormHelperText className={reqpass}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormControl required className=\"formControl\">\r\n                <InputLabel htmlFor=\"contact\">Contact No.</InputLabel>\r\n                <Input\r\n                  refs=\"mobile_number\"\r\n                  id=\"mobile_number\"\r\n                  name=\"mobile_number\"\r\n                  type=\"number\"\r\n                  onChange={inputChangedHandler}\r\n                />\r\n                <FormHelperText className={reqmobile}>\r\n                  <span className=\"red\">Required</span>\r\n                </FormHelperText>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              <FormHelperText\r\n                className={showdisplay}\r\n                style={{ fontSize: \"14px\", color: \"black\" }}\r\n              >\r\n                Registration Successful. Please Login!\r\n              </FormHelperText>\r\n              <br />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={onFormSubmitted}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </TabPanel>\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}