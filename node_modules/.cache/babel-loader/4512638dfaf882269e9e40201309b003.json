{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sudheer\\\\Documents\\\\GitHub\\\\BookMovieApp\\\\src\\\\screens\\\\home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Header from \"../../common/header/Header\";\nimport \"./Home.css\";\nimport { ImageList, ImageListItem, ImageListItemBar, Card, CardContent, Typography, FormControl, Button, TextField, InputLabel, Select, MenuItem, Checkbox, ListItemText } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStylesTextArea = {\n  margin: \"10px 0 10px\"\n};\n\nconst styles = theme => ({\n  typo: {\n    color: theme.palette.primary.light,\n    margin: theme.spacing()\n  }\n});\n\nfunction Home(props) {\n  _s();\n\n  const [genres, set_genres] = useState([]);\n  const [genre_list, set_genre_List] = useState([]);\n  const [artists, set_artists] = useState([]);\n  const [artist_list, set_artist_List] = useState([]);\n  const [movie_name, set_movie_Name] = useState(\"\");\n  const [movies_list, set_movies_List] = useState([]);\n  const [released_movies, set_released_movies] = useState([]);\n  const [start_date, set_start_date] = useState([]);\n  const [end_date, set_end_date] = useState([]);\n  const {\n    classes\n  } = props;\n\n  async function loadMovieData() {\n    const input = await fetch(props.baseUrl + \"/movies\");\n    const data = await input.json();\n    set_movies_List(data.movies);\n    set_released_movies(data.movies);\n  }\n\n  async function loadGenres() {\n    const input = await fetch(props.baseUrl + \"/genres\");\n    const data = await input.json();\n    set_genre_List(data.genres);\n  }\n\n  async function loadArtists() {\n    const input = await fetch(props.baseUrl + \"/artists\");\n    const data = await input.json();\n    const g = data.artists.map(artist => ({\n      name: artist.first_name + \" \" + artist.last_name,\n      id: artist.id\n    }));\n    set_artist_List(g);\n  }\n\n  useEffect(() => {\n    loadMovieData();\n    loadGenres();\n    loadArtists();\n  }, []);\n\n  const onMovieSelect = e => {\n    set_movie_Name(e.target.value);\n    console.log(e.target.name + \" : \" + e.target.value);\n  };\n\n  const onGenreSelect = e => {\n    set_genres(e.target.value);\n    console.log(e.target.name + \" : \" + e.target.value);\n  };\n\n  const onArtistSelect = e => {\n    set_artists(e.target.value);\n    console.log(e.target.name + \" : \" + e.target.value);\n  };\n\n  const onStartDateSelect = e => {\n    set_start_date(e.target.value);\n    console.log(e.target.name + \" : \" + e.target.value);\n  };\n\n  const onEndDateSelect = e => {\n    set_end_date(e.target.value);\n    console.log(e.target.name + \" : \" + e.target.value);\n  };\n\n  const onApplyFilter = () => {\n    let filterData = {\n      title: movie_name,\n      genreList: genres,\n      artistList: artists,\n      releasedatestart: start_date,\n      releasedateend: end_date\n    };\n    let dataFilterList = released_movies.filter(movie => {\n      let dataFilter = {};\n\n      if (filterData.title) {\n        if (`${movie.title}`.toLowerCase().includes(`${filterData.title}`.toLowerCase())) {\n          dataFilter.titleStatus = true;\n        } else {\n          dataFilter.titleStatus = false;\n        }\n      }\n\n      if (filterData.genreList && filterData.genreList.length > 0) {\n        movie.genres.map(genre => {\n          if (filterData.genreList.indexOf(genre) > -1) {\n            dataFilter.genreStatus = true;\n          }\n        });\n\n        if (!dataFilter.genreStatus) {\n          dataFilter.genreStatus = false;\n        }\n      }\n\n      if (filterData.artistList && filterData.artistList.length > 0) {\n        console.log(\"releasdatastart status :\" + filterData.artistList);\n        movie.artists && movie.artists.map(artist => {\n          const name = artist.first_name + \" \" + artist.last_name;\n\n          if (filterData.artistList.indexOf(name) > -1) {\n            dataFilter.artistStatus = true;\n          }\n        });\n\n        if (!dataFilter.artistStatus) {\n          dataFilter.artistStatus = false;\n        }\n      }\n\n      let endDate = new Date();\n\n      if (filterData.releasedateend && typeof filterData.releasedateend === typeof \"\") {\n        endDate = new Date(filterData.releasedateend);\n      }\n\n      if (filterData.releasedatestart && typeof filterData.releasedatestart === typeof \"\") {\n        const startDate = new Date(filterData.releasedatestart);\n        const filmDate = new Date(movie.release_date);\n\n        if (filmDate >= startDate && filmDate <= endDate) {\n          dataFilter.releaseDateStatus = true;\n        } else {\n          dataFilter.releaseDateStatus = false;\n        }\n      }\n\n      let status = true;\n\n      for (let item in dataFilter) {\n        if (!dataFilter[item]) {\n          status = false;\n          break;\n        }\n      }\n\n      return status;\n    });\n    set_movies_List(dataFilterList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      baseUrl: props.baseUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"head\",\n      children: \"Upcoming Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n      rowHeight: 250,\n      cols: 6,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid_scroll\",\n        style: {\n          width: \"100%\"\n        },\n        children: released_movies.map(movie => /*#__PURE__*/_jsxDEV(ImageListItem, {\n          className: \"tiles_scroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_url,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n            title: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col1\",\n        children: /*#__PURE__*/_jsxDEV(ImageList, {\n          rowHeight: 350,\n          cols: 4,\n          children: movies_list.map(movie => /*#__PURE__*/_jsxDEV(ImageListItem, {\n            className: \"tiles\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/movie/\" + movie.id,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: movie.poster_url,\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n              title: movie.title,\n              subtitle: \"Release Date:\" + moment(movie.release_date).format(\"ddd MMM DD YYYY\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col2\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.typo,\n              component: \"div\",\n              variant: \"h6\",\n              children: \"FIND MOVIES BY:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: customStylesTextArea,\n                  label: \"Movie Name\",\n                  name: \"movieName\",\n                  onChange: onMovieSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"genres\",\n                  children: \"Genres\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"genres\",\n                  id: \"genres-select\",\n                  name: \"genre\",\n                  value: genres,\n                  label: \"Genres\",\n                  onChange: onGenreSelect,\n                  multiple: true,\n                  renderValue: selected => selected.join(\", \"),\n                  children: genre_list.map(g => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: g.genre,\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: genres.indexOf(g.genre) > -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: g.genre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this)]\n                  }, g.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"artists\",\n                  children: \"Artists\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"artists\",\n                  id: \"artists-select\",\n                  value: artists,\n                  label: \"Artists\",\n                  onChange: onArtistSelect,\n                  multiple: true,\n                  renderValue: selected => selected.join(\", \"),\n                  children: artist_list.map(artist => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: artist.name,\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: artists.indexOf(artist.name) > -1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: artist.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)]\n                  }, artist.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: customStylesTextArea,\n                  label: \"Release Date Start\",\n                  name: \"date\",\n                  type: \"date\",\n                  value: start_date,\n                  onChange: onStartDateSelect,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: customStylesTextArea,\n                  label: \"Release Date End\",\n                  name: \"releaseDateEnd\",\n                  type: \"date\",\n                  renderValue: end_date,\n                  onChange: onEndDateSelect,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: \"30px\",\n                  marginBottom: \"10px\"\n                },\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: onApplyFilter,\n                children: \"APPLY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"rz3Hlo8emA17FDwNFuy1StzPkjE=\");\n\n_c = Home;\nHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Sudheer/Documents/GitHub/BookMovieApp/src/screens/home/Home.js"],"names":["React","useState","useEffect","Link","BrowserRouter","Router","moment","Header","ImageList","ImageListItem","ImageListItemBar","Card","CardContent","Typography","FormControl","Button","TextField","InputLabel","Select","MenuItem","Checkbox","ListItemText","PropTypes","withStyles","Fragment","customStylesTextArea","margin","styles","theme","typo","color","palette","primary","light","spacing","Home","props","genres","set_genres","genre_list","set_genre_List","artists","set_artists","artist_list","set_artist_List","movie_name","set_movie_Name","movies_list","set_movies_List","released_movies","set_released_movies","start_date","set_start_date","end_date","set_end_date","classes","loadMovieData","input","fetch","baseUrl","data","json","movies","loadGenres","loadArtists","g","map","artist","name","first_name","last_name","id","onMovieSelect","e","target","value","console","log","onGenreSelect","onArtistSelect","onStartDateSelect","onEndDateSelect","onApplyFilter","filterData","title","genreList","artistList","releasedatestart","releasedateend","dataFilterList","filter","movie","dataFilter","toLowerCase","includes","titleStatus","length","genre","indexOf","genreStatus","artistStatus","endDate","Date","startDate","filmDate","release_date","releaseDateStatus","status","item","width","poster_url","format","selected","join","shrink","marginTop","marginBottom","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport Header from \"../../common/header/Header\";\r\nimport \"./Home.css\";\r\nimport {\r\n  ImageList,\r\n  ImageListItem,\r\n  ImageListItemBar,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  FormControl,\r\n  Button,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst customStylesTextArea = {\r\n  margin: \"10px 0 10px\",\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  typo: {\r\n    color: theme.palette.primary.light,\r\n    margin: theme.spacing(),\r\n  },\r\n});\r\n\r\nfunction Home(props) {\r\n  const [genres, set_genres] = useState([]);\r\n  const [genre_list, set_genre_List] = useState([]);\r\n  const [artists, set_artists] = useState([]);\r\n  const [artist_list, set_artist_List] = useState([]);\r\n  const [movie_name, set_movie_Name] = useState(\"\");\r\n  const [movies_list, set_movies_List] = useState([]);\r\n  const [released_movies, set_released_movies] = useState([]);\r\n  const [start_date, set_start_date] = useState([]);\r\n  const [end_date, set_end_date] = useState([]);\r\n\r\n  const { classes } = props;\r\n\r\n  async function loadMovieData() {\r\n    const input = await fetch(props.baseUrl + \"/movies\");\r\n    const data = await input.json();\r\n    set_movies_List(data.movies);\r\n    set_released_movies(data.movies);\r\n  }\r\n\r\n  async function loadGenres() {\r\n    const input = await fetch(props.baseUrl + \"/genres\");\r\n    const data = await input.json();\r\n    set_genre_List(data.genres);\r\n  }\r\n\r\n  async function loadArtists() {\r\n    const input = await fetch(props.baseUrl + \"/artists\");\r\n    const data = await input.json();\r\n    const g = data.artists.map((artist) => ({\r\n      name: artist.first_name + \" \" + artist.last_name,\r\n      id: artist.id,\r\n    }));\r\n    set_artist_List(g);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadMovieData();\r\n    loadGenres();\r\n    loadArtists();\r\n  }, []);\r\n\r\n  const onMovieSelect = (e) => {\r\n    set_movie_Name(e.target.value);\r\n    console.log(e.target.name + \" : \" + e.target.value);\r\n  };\r\n\r\n  const onGenreSelect = (e) => {\r\n    set_genres(e.target.value);\r\n    console.log(e.target.name + \" : \" + e.target.value);\r\n  };\r\n\r\n  const onArtistSelect = (e) => {\r\n    set_artists(e.target.value);\r\n    console.log(e.target.name + \" : \" + e.target.value);\r\n  };\r\n\r\n  const onStartDateSelect = (e) => {\r\n    set_start_date(e.target.value);\r\n    console.log(e.target.name + \" : \" + e.target.value);\r\n  };\r\n\r\n  const onEndDateSelect = (e) => {\r\n    set_end_date(e.target.value);\r\n    console.log(e.target.name + \" : \" + e.target.value);\r\n  };\r\n\r\n  const onApplyFilter = () => {\r\n    let filterData = {\r\n      title: movie_name,\r\n      genreList: genres,\r\n      artistList: artists,\r\n      releasedatestart: start_date,\r\n      releasedateend: end_date,\r\n    };\r\n    let dataFilterList = released_movies.filter((movie) => {\r\n      let dataFilter = {};\r\n      if (filterData.title) {\r\n        if (\r\n          `${movie.title}`\r\n            .toLowerCase()\r\n            .includes(`${filterData.title}`.toLowerCase())\r\n        ) {\r\n          dataFilter.titleStatus = true;\r\n        } else {\r\n          dataFilter.titleStatus = false;\r\n        }\r\n      }\r\n      if (filterData.genreList && filterData.genreList.length > 0) {\r\n        movie.genres.map((genre) => {\r\n          if (filterData.genreList.indexOf(genre) > -1) {\r\n            dataFilter.genreStatus = true;\r\n          }\r\n        });\r\n        if (!dataFilter.genreStatus) {\r\n          dataFilter.genreStatus = false;\r\n        }\r\n      }\r\n      if (filterData.artistList && filterData.artistList.length > 0) {\r\n        console.log(\"releasdatastart status :\" + filterData.artistList);\r\n        movie.artists &&\r\n          movie.artists.map((artist) => {\r\n            const name = artist.first_name + \" \" + artist.last_name;\r\n            if (filterData.artistList.indexOf(name) > -1) {\r\n              dataFilter.artistStatus = true;\r\n            }\r\n          });\r\n        if (!dataFilter.artistStatus) {\r\n          dataFilter.artistStatus = false;\r\n        }\r\n      }\r\n      let endDate = new Date();\r\n      if (\r\n        filterData.releasedateend &&\r\n        typeof filterData.releasedateend === typeof \"\"\r\n      ) {\r\n        endDate = new Date(filterData.releasedateend);\r\n      }\r\n      if (\r\n        filterData.releasedatestart &&\r\n        typeof filterData.releasedatestart === typeof \"\"\r\n      ) {\r\n        const startDate = new Date(filterData.releasedatestart);\r\n        const filmDate = new Date(movie.release_date);\r\n        if (filmDate >= startDate && filmDate <= endDate) {\r\n          dataFilter.releaseDateStatus = true;\r\n        } else {\r\n          dataFilter.releaseDateStatus = false;\r\n        }\r\n      }\r\n      let status = true;\r\n      for (let item in dataFilter) {\r\n        if (!dataFilter[item]) {\r\n          status = false;\r\n          break;\r\n        }\r\n      }\r\n      return status;\r\n    });\r\n    set_movies_List(dataFilterList);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header baseUrl={props.baseUrl}></Header>\r\n      <header className=\"head\">Upcoming Movies</header>\r\n      <ImageList rowHeight={250} cols={6}>\r\n        <div className=\"grid_scroll\" style={{ width: \"100%\" }}>\r\n          {released_movies.map((movie) => (\r\n            <ImageListItem className=\"tiles_scroll\" key={movie.id}>\r\n              <img src={movie.poster_url} alt={movie.title} />\r\n              <ImageListItemBar title={movie.title} />\r\n            </ImageListItem>\r\n          ))}\r\n        </div>\r\n      </ImageList>\r\n      <div className=\"container\" style={{ width: \"100%\" }}>\r\n        <div className=\"col1\">\r\n          <ImageList rowHeight={350} cols={4}>\r\n            {movies_list.map((movie) => (\r\n              <ImageListItem className=\"tiles\" key={movie.id}>\r\n                <Link to={\"/movie/\" + movie.id}>\r\n                  <img src={movie.poster_url} alt={movie.title} />\r\n                </Link>\r\n                <ImageListItemBar\r\n                  title={movie.title}\r\n                  subtitle={\r\n                    \"Release Date:\" +\r\n                    moment(movie.release_date).format(\"ddd MMM DD YYYY\")\r\n                  }\r\n                />\r\n              </ImageListItem>\r\n            ))}\r\n          </ImageList>\r\n        </div>\r\n        <div className=\"col2\">\r\n          <Card>\r\n            <CardContent>\r\n              <Typography className={classes.typo} component=\"div\" variant=\"h6\">\r\n                FIND MOVIES BY:\r\n              </Typography>\r\n              <form className=\"form\">\r\n                <FormControl>\r\n                  <TextField\r\n                    style={customStylesTextArea}\r\n                    label=\"Movie Name\"\r\n                    name=\"movieName\"\r\n                    onChange={onMovieSelect}\r\n                  />\r\n                </FormControl>\r\n                <FormControl variant=\"standard\">\r\n                  <InputLabel id=\"genres\">Genres</InputLabel>\r\n                  <Select\r\n                    labelId=\"genres\"\r\n                    id=\"genres-select\"\r\n                    name=\"genre\"\r\n                    value={genres}\r\n                    label=\"Genres\"\r\n                    onChange={onGenreSelect}\r\n                    multiple\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                  >\r\n                    {genre_list.map((g) => (\r\n                      <MenuItem key={g.id} value={g.genre}>\r\n                        <Checkbox checked={genres.indexOf(g.genre) > -1} />\r\n                        <ListItemText primary={g.genre} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\">\r\n                  <InputLabel id=\"artists\">Artists</InputLabel>\r\n                  <Select\r\n                    labelId=\"artists\"\r\n                    id=\"artists-select\"\r\n                    value={artists}\r\n                    label=\"Artists\"\r\n                    onChange={onArtistSelect}\r\n                    multiple\r\n                    renderValue={(selected) => selected.join(\", \")}\r\n                  >\r\n                    {artist_list.map((artist) => (\r\n                      <MenuItem key={artist.id} value={artist.name}>\r\n                        <Checkbox checked={artists.indexOf(artist.name) > -1} />\r\n                        <ListItemText primary={artist.name} />\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                  <TextField\r\n                    style={customStylesTextArea}\r\n                    label=\"Release Date Start\"\r\n                    name=\"date\"\r\n                    type=\"date\"\r\n                    value={start_date}\r\n                    onChange={onStartDateSelect}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <FormControl>\r\n                  <TextField\r\n                    style={customStylesTextArea}\r\n                    label=\"Release Date End\"\r\n                    name=\"releaseDateEnd\"\r\n                    type=\"date\"\r\n                    renderValue={end_date}\r\n                    onChange={onEndDateSelect}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  style={{ marginTop: \"30px\", marginBottom: \"10px\" }}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={onApplyFilter}\r\n                >\r\n                  APPLY\r\n                </Button>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Home);"]},"metadata":{},"sourceType":"module"}